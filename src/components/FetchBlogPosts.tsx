import React, { useState, useEffect } from "react";

import { makeStyles } from "@material-ui/core/styles";
import Table from "@material-ui/core/Table";
import TableBody from "@material-ui/core/TableBody";
import TableCell from "@material-ui/core/TableCell";
import TableHead from "@material-ui/core/TableHead";
import TableRow from "@material-ui/core/TableRow";
import Paper from "@material-ui/core/Paper";

const useStyles = makeStyles({
  root: {
    width: "100%",
    overflowX: "auto"
  },
  table: {
    minWidth: 650
  }
});

interface SimpleTableProps {
  rows: BlogPost[];
}

const SimpleTable: React.FC<SimpleTableProps> = ({ rows }) => {
  const classes = useStyles();

  return (
    <Paper className={classes.root}>
      <Table className={classes.table} aria-label="simple table">
        <TableHead>
          <TableRow>
            <TableCell>User Id</TableCell>
            <TableCell>Post Id</TableCell>
            <TableCell>Title</TableCell>
            <TableCell>Body</TableCell>
          </TableRow>
        </TableHead>
        <TableBody>
          {rows.map(row => (
            <TableRow key={row.id}>
              {/* <TableCell component="th" scope="row">
                {row.title}
              </TableCell> */}
              {/* <TableCell align="right">{row.calories}</TableCell>
              <TableCell align="right">{row.fat}</TableCell>
              <TableCell align="right">{row.carbs}</TableCell>
              <TableCell align="right">{row.protein}</TableCell> */}
              <TableCell>{row.userId}</TableCell>
              <TableCell>{row.id}</TableCell>
              <TableCell>{row.title}</TableCell>
              <TableCell>{row.body}</TableCell>
            </TableRow>
          ))}
        </TableBody>
      </Table>
    </Paper>
  );
};

// https://stackoverflow.com/questions/53332321/react-hook-warnings-for-async-function-in-useeffect-useeffect-function-must-ret
// export default function Example() {
//     const [data, dataSet] = useState(false)

//     async function fetchMyAPI() {
//       let response = await fetch('api/data')
//       response = await res.json()
//       dataSet(response)
//     }

//     useEffect(() => {
//       fetchMyAPI();
//     }, []);

//   return <div>{data}</div>
// }

const FetchBlogPosts = () => {
  const [data, setData] = useState<BlogPost[]>([]);
  const [loading, setLoading] = useState(true);

  async function fetchMyAPI() {
    const responseJson = await fetch(
      "https://jsonplaceholder.typicode.com/posts/"
    );
    const response: BlogPost[] = await responseJson.json();
    setData(response);
    setLoading(false);
  }

  useEffect(() => {
    fetchMyAPI();
  }, []);

  return (
    <div>
      {loading ? (
        <div>...loading</div>
      ) : (
        <div>{data && <SimpleTable rows={data} />}</div>
      )}
    </div>
  );
};

// Generated by https://quicktype.io

export interface BlogPost {
  userId: number;
  id: number;
  title: string;
  body: string;
}

export default FetchBlogPosts;
